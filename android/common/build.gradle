apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compilesdk_version as int
    buildToolsVersion build_version

    defaultConfig {
        minSdkVersion minsdk_version as int
        targetSdkVersion targetsdk_version as int
        versionCode version_code as int
        versionName version_name
    }

    buildFeatures {
        dataBinding = true
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':net')
    api project(path: ':widget')
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    api "androidx.cardview:cardview:$cardview_version"
    api "androidx.core:core-ktx:$core_ktx_version"
    api "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    api "androidx.viewpager2:viewpager2:$viewpager_version"
    api "com.google.android.material:material:$material_version"
    //利用liveData发送消息  https://github.com/KunMinX/UnPeek-LiveData
    api "com.kunminx.archi:unpeek-livedata:${unpeek_livedata_version}"
    // 优化异步加载 https://github.com/YummyLau/Anchors
    api "com.effective.android:anchors:${anchors_version}"
    // 好看的弹窗 https://github.com/afollestad/material-dialogs
    api "com.afollestad.material-dialogs:core:$material_dialogs_version"
    // 引入liveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
    //lifecycle
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // viewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // 日志打印 https://github.com/ZhaoKaiQiang/KLog
    api "com.github.zhaokaiqiang.klog:library:$klog_version"
    // 自定义toast https://github.com/GrenderG/Toasty
    api "com.github.GrenderG:Toasty:$toasty_version"
    // 自定义下拉刷新框架
    // 注意：分包之后不会有默认的Header和Footer需要手动添加！还是原来的三种方法！
    // https://github.com/scwang90/SmartRefreshLayout
    api  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    api  'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    // 一个强大的adapter  https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    // 图片加载库
    api 'com.facebook.fresco:fresco:2.1.0'
    // 应用更新库 https://github.com/AlexLiuSheng/CheckVersionLib
    api 'com.github.AlexLiuSheng:CheckVersionLib:2.4.1_androidx'
    // 权限请求框架：https://github.com/getActivity/XXPermissions
    api 'com.hjq:xxpermissions:9.8'
    // 手势交互库 https://github.com/nisrulz/sensey
    //api 'com.github.nisrulz:sensey:1.9.0'
    // 功能强大的弹框 https://github.com/li-xiaojun/XPopup
    api 'com.lxj:xpopup:2.2.20'
}